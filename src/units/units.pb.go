// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: units/units.proto

package units

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnitType int32

const (
	UnitType_ABOLITIONIST     UnitType = 0
	UnitType_AIRCRAFT_CARRIER UnitType = 1
)

// Enum value maps for UnitType.
var (
	UnitType_name = map[int32]string{
		0: "ABOLITIONIST",
		1: "AIRCRAFT_CARRIER",
	}
	UnitType_value = map[string]int32{
		"ABOLITIONIST":     0,
		"AIRCRAFT_CARRIER": 1,
	}
)

func (x UnitType) Enum() *UnitType {
	p := new(UnitType)
	*p = x
	return p
}

func (x UnitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitType) Descriptor() protoreflect.EnumDescriptor {
	return file_units_units_proto_enumTypes[0].Descriptor()
}

func (UnitType) Type() protoreflect.EnumType {
	return &file_units_units_proto_enumTypes[0]
}

func (x UnitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UnitType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UnitType(num)
	return nil
}

// Deprecated: Use UnitType.Descriptor instead.
func (UnitType) EnumDescriptor() ([]byte, []int) {
	return file_units_units_proto_rawDescGZIP(), []int{0}
}

type UnitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *UnitType `protobuf:"varint,1,opt,name=type,enum=units.UnitType" json:"type,omitempty"`
}

func (x *UnitInfo) Reset() {
	*x = UnitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_units_units_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitInfo) ProtoMessage() {}

func (x *UnitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_units_units_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitInfo.ProtoReflect.Descriptor instead.
func (*UnitInfo) Descriptor() ([]byte, []int) {
	return file_units_units_proto_rawDescGZIP(), []int{0}
}

func (x *UnitInfo) GetType() UnitType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return UnitType_ABOLITIONIST
}

type Unit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Not sure what this field is actually assigned to, looks like it was initially DESCRIPTION_UNIT_ABOLITIONIST for Abolitionist but that value isn't set anywhere
	// I am leaving in the tags in case a source-based client decides to use this server
	Description   *string       `protobuf:"bytes,1,opt,name=description,def=The Abolitionist is your primary weapon against the insidious attacks of foreign <L:DATABASE_UNITS,UNIT_SLAVER>Slavers<e>.  Two actions are at her disposal:  the <L:DATABASE_ORDERS,ORDER_UNDERGROUND_RAILWAY>Free Slave<e> action, which frees any slaves in the target city, and <L:DATABASE_ORDERS,ORDER_INCITE_UPRISING>Aid Uprising<e>, which can help propel a restless enemy city into full-scale <L:DATABASE_CONCEPTS,CONCEPT_RIOTS>Rioting<e>.\n\nBecause the Abolitionist is a <L:DATABASE_CONCEPTS,CONCEPT_STEALTH_UNITS>Stealth Unit<e>, it is able to see other stealth units." json:"description,omitempty"`
	Category      *UnitCategory `protobuf:"varint,2,opt,name=category,enum=units.UnitCategory,def=9" json:"category,omitempty"`
	Attack        *int32        `protobuf:"varint,3,opt,name=attack,def=0" json:"attack,omitempty"`
	Defense       *int32        `protobuf:"varint,4,opt,name=defense,def=10" json:"defense,omitempty"`
	ZbRangeAttack *int32        `protobuf:"varint,5,opt,name=zbRangeAttack,def=0" json:"zbRangeAttack,omitempty"`
	Firepower     *int32        `protobuf:"varint,6,opt,name=firepower,def=1" json:"firepower,omitempty"`
	Armor         *int32        `protobuf:"varint,7,opt,name=armor,def=1" json:"armor,omitempty"`
	MaxHp         *int32        `protobuf:"varint,8,opt,name=maxHp,def=10" json:"maxHp,omitempty"`
	ShieldCost    *int32        `protobuf:"varint,9,opt,name=shieldCost,def=540" json:"shieldCost,omitempty"`
	PowerPoints   *int32        `protobuf:"varint,10,opt,name=powerPoints,def=250" json:"powerPoints,omitempty"`
	ShieldHunger  *int32        `protobuf:"varint,11,opt,name=shieldHunger,def=5" json:"shieldHunger,omitempty"`
	FoodHunger    *int32        `protobuf:"varint,12,opt,name=foodHunger,def=0" json:"foodHunger,omitempty"`
	MaxMovePoints *int32        `protobuf:"varint,13,opt,name=maxMovePoints,def=300" json:"maxMovePoints,omitempty"`
	VisionRange   *int32        `protobuf:"varint,14,opt,name=visionRange,def=1" json:"visionRange,omitempty"`
}

// Default values for Unit fields.
const (
	Default_Unit_Description   = string("The Abolitionist is your primary weapon against the insidious attacks of foreign <L:DATABASE_UNITS,UNIT_SLAVER>Slavers<e>.  Two actions are at her disposal:  the <L:DATABASE_ORDERS,ORDER_UNDERGROUND_RAILWAY>Free Slave<e> action, which frees any slaves in the target city, and <L:DATABASE_ORDERS,ORDER_INCITE_UPRISING>Aid Uprising<e>, which can help propel a restless enemy city into full-scale <L:DATABASE_CONCEPTS,CONCEPT_RIOTS>Rioting<e>.\n\nBecause the Abolitionist is a <L:DATABASE_CONCEPTS,CONCEPT_STEALTH_UNITS>Stealth Unit<e>, it is able to see other stealth units.")
	Default_Unit_Category      = UnitCategory_SPECIAL
	Default_Unit_Attack        = int32(0)
	Default_Unit_Defense       = int32(10)
	Default_Unit_ZbRangeAttack = int32(0)
	Default_Unit_Firepower     = int32(1)
	Default_Unit_Armor         = int32(1)
	Default_Unit_MaxHp         = int32(10)
	Default_Unit_ShieldCost    = int32(540)
	Default_Unit_PowerPoints   = int32(250)
	Default_Unit_ShieldHunger  = int32(5)
	Default_Unit_FoodHunger    = int32(0)
	Default_Unit_MaxMovePoints = int32(300)
	Default_Unit_VisionRange   = int32(1)
)

func (x *Unit) Reset() {
	*x = Unit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_units_units_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_units_units_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_units_units_proto_rawDescGZIP(), []int{1}
}

func (x *Unit) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return Default_Unit_Description
}

func (x *Unit) GetCategory() UnitCategory {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return Default_Unit_Category
}

func (x *Unit) GetAttack() int32 {
	if x != nil && x.Attack != nil {
		return *x.Attack
	}
	return Default_Unit_Attack
}

func (x *Unit) GetDefense() int32 {
	if x != nil && x.Defense != nil {
		return *x.Defense
	}
	return Default_Unit_Defense
}

func (x *Unit) GetZbRangeAttack() int32 {
	if x != nil && x.ZbRangeAttack != nil {
		return *x.ZbRangeAttack
	}
	return Default_Unit_ZbRangeAttack
}

func (x *Unit) GetFirepower() int32 {
	if x != nil && x.Firepower != nil {
		return *x.Firepower
	}
	return Default_Unit_Firepower
}

func (x *Unit) GetArmor() int32 {
	if x != nil && x.Armor != nil {
		return *x.Armor
	}
	return Default_Unit_Armor
}

func (x *Unit) GetMaxHp() int32 {
	if x != nil && x.MaxHp != nil {
		return *x.MaxHp
	}
	return Default_Unit_MaxHp
}

func (x *Unit) GetShieldCost() int32 {
	if x != nil && x.ShieldCost != nil {
		return *x.ShieldCost
	}
	return Default_Unit_ShieldCost
}

func (x *Unit) GetPowerPoints() int32 {
	if x != nil && x.PowerPoints != nil {
		return *x.PowerPoints
	}
	return Default_Unit_PowerPoints
}

func (x *Unit) GetShieldHunger() int32 {
	if x != nil && x.ShieldHunger != nil {
		return *x.ShieldHunger
	}
	return Default_Unit_ShieldHunger
}

func (x *Unit) GetFoodHunger() int32 {
	if x != nil && x.FoodHunger != nil {
		return *x.FoodHunger
	}
	return Default_Unit_FoodHunger
}

func (x *Unit) GetMaxMovePoints() int32 {
	if x != nil && x.MaxMovePoints != nil {
		return *x.MaxMovePoints
	}
	return Default_Unit_MaxMovePoints
}

func (x *Unit) GetVisionRange() int32 {
	if x != nil && x.VisionRange != nil {
		return *x.VisionRange
	}
	return Default_Unit_VisionRange
}

var File_units_units_proto protoreflect.FileDescriptor

var file_units_units_proto_rawDesc = []byte{
	0x0a, 0x11, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x1a, 0x19, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbc, 0x08, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0xdd, 0x04, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x3a, 0xba, 0x04, 0x54, 0x68, 0x65, 0x20, 0x41, 0x62, 0x6f, 0x6c,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x73, 0x74, 0x20, 0x69, 0x73, 0x20, 0x79, 0x6f, 0x75, 0x72,
	0x20, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x20, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x20,
	0x61, 0x67, 0x61, 0x69, 0x6e, 0x73, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x73, 0x69,
	0x64, 0x69, 0x6f, 0x75, 0x73, 0x20, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x20, 0x6f, 0x66,
	0x20, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x20, 0x3c, 0x4c, 0x3a, 0x44, 0x41, 0x54, 0x41,
	0x42, 0x41, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x53, 0x2c, 0x55, 0x4e, 0x49, 0x54, 0x5f,
	0x53, 0x4c, 0x41, 0x56, 0x45, 0x52, 0x3e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x72, 0x73, 0x3c, 0x65,
	0x3e, 0x2e, 0x20, 0x20, 0x54, 0x77, 0x6f, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20,
	0x61, 0x72, 0x65, 0x20, 0x61, 0x74, 0x20, 0x68, 0x65, 0x72, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x3a, 0x20, 0x20, 0x74, 0x68, 0x65, 0x20, 0x3c, 0x4c, 0x3a, 0x44, 0x41, 0x54,
	0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x53, 0x2c, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x47, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x52,
	0x41, 0x49, 0x4c, 0x57, 0x41, 0x59, 0x3e, 0x46, 0x72, 0x65, 0x65, 0x20, 0x53, 0x6c, 0x61, 0x76,
	0x65, 0x3c, 0x65, 0x3e, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x77, 0x68, 0x69,
	0x63, 0x68, 0x20, 0x66, 0x72, 0x65, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x20, 0x63, 0x69, 0x74, 0x79, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x3c, 0x4c, 0x3a, 0x44,
	0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x53, 0x2c, 0x4f,
	0x52, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x43, 0x49, 0x54, 0x45, 0x5f, 0x55, 0x50, 0x52, 0x49,
	0x53, 0x49, 0x4e, 0x47, 0x3e, 0x41, 0x69, 0x64, 0x20, 0x55, 0x70, 0x72, 0x69, 0x73, 0x69, 0x6e,
	0x67, 0x3c, 0x65, 0x3e, 0x2c, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x63, 0x61, 0x6e, 0x20,
	0x68, 0x65, 0x6c, 0x70, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x6c, 0x20, 0x61, 0x20, 0x72, 0x65,
	0x73, 0x74, 0x6c, 0x65, 0x73, 0x73, 0x20, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x20, 0x63, 0x69, 0x74,
	0x79, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x66, 0x75, 0x6c, 0x6c, 0x2d, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x20, 0x3c, 0x4c, 0x3a, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x43, 0x45, 0x50, 0x54, 0x53, 0x2c, 0x43, 0x4f, 0x4e, 0x43, 0x45, 0x50, 0x54, 0x5f, 0x52,
	0x49, 0x4f, 0x54, 0x53, 0x3e, 0x52, 0x69, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x3c, 0x65, 0x3e, 0x2e,
	0x0a, 0x0a, 0x42, 0x65, 0x63, 0x61, 0x75, 0x73, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x62,
	0x6f, 0x6c, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x73, 0x74, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20,
	0x3c, 0x4c, 0x3a, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x43,
	0x45, 0x50, 0x54, 0x53, 0x2c, 0x43, 0x4f, 0x4e, 0x43, 0x45, 0x50, 0x54, 0x5f, 0x53, 0x54, 0x45,
	0x41, 0x4c, 0x54, 0x48, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x53, 0x3e, 0x53, 0x74, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x20, 0x55, 0x6e, 0x69, 0x74, 0x3c, 0x65, 0x3e, 0x2c, 0x20, 0x69, 0x74, 0x20, 0x69,
	0x73, 0x20, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x65, 0x65, 0x20, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x20, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x20, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x2e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x3a, 0x07, 0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x06, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x31, 0x30, 0x52, 0x07, 0x64, 0x65, 0x66, 0x65, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x0d, 0x7a, 0x62, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0d, 0x7a, 0x62,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x09, 0x66,
	0x69, 0x72, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01,
	0x31, 0x52, 0x09, 0x66, 0x69, 0x72, 0x65, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x05,
	0x61, 0x72, 0x6d, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x05,
	0x61, 0x72, 0x6d, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x48, 0x70, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x31, 0x30, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x48, 0x70, 0x12,
	0x23, 0x0a, 0x0a, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x3a, 0x03, 0x35, 0x34, 0x30, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x03, 0x32, 0x35, 0x30, 0x52, 0x0b,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0c, 0x73,
	0x68, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x75, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x3a, 0x01, 0x35, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x75, 0x6e, 0x67,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0a, 0x66, 0x6f, 0x6f, 0x64, 0x48, 0x75, 0x6e, 0x67, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x64, 0x48,
	0x75, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x4d, 0x6f, 0x76, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x03, 0x33, 0x30,
	0x30, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x23, 0x0a, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x2a, 0x32, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x42, 0x4f, 0x4c, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x49, 0x53,
	0x54, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x49, 0x52, 0x43, 0x52, 0x41, 0x46, 0x54, 0x5f,
	0x43, 0x41, 0x52, 0x52, 0x49, 0x45, 0x52, 0x10, 0x01, 0x32, 0x36, 0x0a, 0x0b, 0x55, 0x6e, 0x69,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x0f, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x2e, 0x55, 0x6e, 0x69,
	0x74, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6a, 0x75, 0x73, 0x74, 0x69, 0x6e, 0x66, 0x61, 0x72, 0x72, 0x65, 0x6c, 0x6c, 0x64, 0x65, 0x76,
	0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x2d, 0x63, 0x74, 0x70, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73,
}

var (
	file_units_units_proto_rawDescOnce sync.Once
	file_units_units_proto_rawDescData = file_units_units_proto_rawDesc
)

func file_units_units_proto_rawDescGZIP() []byte {
	file_units_units_proto_rawDescOnce.Do(func() {
		file_units_units_proto_rawDescData = protoimpl.X.CompressGZIP(file_units_units_proto_rawDescData)
	})
	return file_units_units_proto_rawDescData
}

var file_units_units_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_units_units_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_units_units_proto_goTypes = []interface{}{
	(UnitType)(0),     // 0: units.UnitType
	(*UnitInfo)(nil),  // 1: units.UnitInfo
	(*Unit)(nil),      // 2: units.Unit
	(UnitCategory)(0), // 3: units.UnitCategory
}
var file_units_units_proto_depIdxs = []int32{
	0, // 0: units.UnitInfo.type:type_name -> units.UnitType
	3, // 1: units.Unit.category:type_name -> units.UnitCategory
	1, // 2: units.UnitService.GetUnit:input_type -> units.UnitInfo
	2, // 3: units.UnitService.GetUnit:output_type -> units.Unit
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_units_units_proto_init() }
func file_units_units_proto_init() {
	if File_units_units_proto != nil {
		return
	}
	file_units_unit_category_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_units_units_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_units_units_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_units_units_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_units_units_proto_goTypes,
		DependencyIndexes: file_units_units_proto_depIdxs,
		EnumInfos:         file_units_units_proto_enumTypes,
		MessageInfos:      file_units_units_proto_msgTypes,
	}.Build()
	File_units_units_proto = out.File
	file_units_units_proto_rawDesc = nil
	file_units_units_proto_goTypes = nil
	file_units_units_proto_depIdxs = nil
}
